{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAIEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAON,IACtB,kCAAMA,SCHLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAM,SAAAC,GACHC,YAAY,WAERJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGf,UAGP,CAACpB,IAEGqB,EDpB2BM,CAAc3B,GAAnCa,EAFwB,EAE7BN,KAAca,EAFe,EAEfA,QAKtB,OAHAQ,QAAQC,IAAIT,GAIR,qCACI,qBAAIJ,UAAW,sCAAf,cAAuDhB,KAErDoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEjBxBmB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAU9B,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCjBpCgC,IAASC,OAAQ,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.63dbd099.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // console.log('Submit hecho')\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=6feCnr6CRrx4VYryzhcF42d3uIu7CFpt`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceInUp\">\r\n            <img src={url} alt = {title} ></img>\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category );\r\n\r\n    console.log(loading);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className =\"animate__animated animate__backInUp\"> {category}</h3>\r\n\r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then( imgs => {\r\n            setTimeout( () => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n                \r\n            },1000);\r\n\r\n        })\r\n    }, [category])\r\n\r\n    return state; // {data: [], loading: true};\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(['HunterXHunter', ...categories ]);\r\n    //     setCategories( cats => ['HunterXHunter', ...categories ]);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2> Gif Expert App </h2>\r\n            <AddCategory setCategories={ setCategories} />\r\n            <hr></hr>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }></GifGrid>\r\n                    ))   \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Component\nimport { GifExpertApp } from './GifExpertApp';\n\n//css\nimport './index.css';\n\nReactDOM.render( <GifExpertApp />,  document.getElementById('root') );\n\n"],"sourceRoot":""}